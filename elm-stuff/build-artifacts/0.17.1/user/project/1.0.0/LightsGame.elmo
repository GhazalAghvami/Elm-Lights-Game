var _user$project$LightsGame$matrixToDivs = function (matrix) {
	var height = _eeue56$elm_flat_matrix$Matrix$height(matrix);
	var makeRow = function (y) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			A2(
				_elm_lang$core$Maybe$withDefault,
				_elm_lang$core$Native_List.fromArray(
					[]),
				A2(
					_elm_lang$core$Maybe$map,
					_elm_lang$core$Array$toList,
					A2(_eeue56$elm_flat_matrix$Matrix$getRow, y, matrix))));
	};
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		A2(
			_elm_lang$core$List$map,
			makeRow,
			_elm_lang$core$Native_List.range(0, height)));
};
var _user$project$LightsGame$toggleLight = F2(
	function (indexToToggle, matrix) {
		return A4(
			_eeue56$elm_flat_matrix$Matrix$update,
			indexToToggle.x,
			indexToToggle.y - 1,
			_elm_lang$core$Basics$not,
			A4(
				_eeue56$elm_flat_matrix$Matrix$update,
				indexToToggle.x,
				indexToToggle.y + 1,
				_elm_lang$core$Basics$not,
				A4(
					_eeue56$elm_flat_matrix$Matrix$update,
					indexToToggle.x - 1,
					indexToToggle.y,
					_elm_lang$core$Basics$not,
					A4(
						_eeue56$elm_flat_matrix$Matrix$update,
						indexToToggle.x + 1,
						indexToToggle.y,
						_elm_lang$core$Basics$not,
						A4(_eeue56$elm_flat_matrix$Matrix$update, indexToToggle.x, indexToToggle.y, _elm_lang$core$Basics$not, matrix)))));
	});
var _user$project$LightsGame$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				isOn: A2(_user$project$LightsGame$toggleLight, _p0._0, model.isOn)
			});
	});
var _user$project$LightsGame$defaultBoard = A3(_eeue56$elm_flat_matrix$Matrix$repeat, 5, 5, true);
var _user$project$LightsGame$init = function (startingBoard) {
	return {isOn: startingBoard};
};
var _user$project$LightsGame$Model = function (a) {
	return {isOn: a};
};
var _user$project$LightsGame$LightIndex = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$LightsGame$Toggle = function (a) {
	return {ctor: 'Toggle', _0: a};
};
var _user$project$LightsGame$lightButton = F3(
	function (x, y, isOn) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$style(
					_elm_lang$core$Native_List.fromArray(
						[
							{
							ctor: '_Tuple2',
							_0: 'background-color',
							_1: isOn ? 'orange' : 'green'
						},
							{ctor: '_Tuple2', _0: 'width', _1: '80px'},
							{ctor: '_Tuple2', _0: 'height', _1: '80px'},
							{ctor: '_Tuple2', _0: 'border-radius', _1: '4px'},
							{ctor: '_Tuple2', _0: 'margin', _1: '2px'},
							{ctor: '_Tuple2', _0: 'display', _1: 'inline-block'}
						])),
					_elm_lang$html$Html_Events$onClick(
					_user$project$LightsGame$Toggle(
						{x: x, y: y}))
				]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	});
var _user$project$LightsGame$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$LightsGame$matrixToDivs(
				A2(_eeue56$elm_flat_matrix$Matrix$indexedMap, _user$project$LightsGame$lightButton, model.isOn)),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$pre,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model))
					]))
			]));
};
